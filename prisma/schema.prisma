datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  username  String     @unique @db.VarChar(100) // New field for username
  fullName  String     @db.VarChar(255) // New field for full name
  status    Int?       @db.TinyInt // New field for status
  createdAt DateTime   @default(now()) // New field for created_at
  updatedAt DateTime   @updatedAt // New field for updated_at
  notes     Note[]
  roles     UserRole[] // New relation to UserRole
  Password  Password?
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

enum ResourceType {
  video
  image
  raw
}

model Media {
  id           String       @id @default(cuid())
  publicId     String
  displayName  String
  resourceType ResourceType
  width        Int?
  height       Int?
  bytes        Int
  url          String
  format       String?
  caption      String? // New field for caption
  altText      String? // New field for alt text
  description  String? // New field for description
  createdAt    DateTime     @default(now())
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

// New model for Role
model Role {
  id          String   @id @default(cuid())
  name        String   @db.VarChar(100) // New field for role name
  description String?  @db.Text // New field for role description
  createdAt   DateTime @default(now()) // New field for created_at
  updatedAt   DateTime @updatedAt // New field for updated_at

  permissions RolePermission[] // New relation to RolePermission
  users       UserRole[] // New relation to UserRole
}

// New model for Permission
model Permission {
  id          String   @id @default(cuid())
  name        String   @db.VarChar(100) // New field for permission name
  description String?  @db.Text // New field for permission description
  createdAt   DateTime @default(now()) // New field for created_at
  updatedAt   DateTime @updatedAt // New field for updated_at

  roles RolePermission[] // New relation to RolePermission
}

// New model for Role_Permissions
model RolePermission {
  roleId       String
  permissionId String

  role       Role       @relation(fields: [roleId], references: [id], onDelete: Cascade, onUpdate: Cascade) // Relation to Role
  permission Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade, onUpdate: Cascade) // Relation to Permission

  @@id([roleId, permissionId]) // Composite primary key
}

// New model for User_Roles
model UserRole {
  userId String
  roleId String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade) // Relation to User
  role Role @relation(fields: [roleId], references: [id], onDelete: Cascade, onUpdate: Cascade) // Relation to Role

  @@id([userId, roleId]) // Composite primary key
}
